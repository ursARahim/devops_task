---
- name: Install Nginx using Docker on VM4 as a reverse proxy
  hosts: proxy
  become: yes
  vars:
    backend_servers:
      - 192.168.123.10
      - 192.168.123.11
      - 192.168.123.12
    static_server: 192.168.123.10

  tasks:
    - name: Create directory for Nginx configuration
      file:
        path: /home/{{ ansible_user }}/nginx-proxy
        state: directory
        mode: '0755'

    - name: Create Nginx configuration file
      copy:
        dest: /home/{{ ansible_user }}/nginx-proxy/nginx.conf
        content: |
          user  nginx;
          worker_processes  auto;
          error_log  /var/log/nginx/error.log;
          pid        /var/run/nginx.pid;

          events {
              worker_connections  1024;
          }

          http {
              include       /etc/nginx/mime.types;
              default_type  application/octet-stream;
              log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';
              access_log  /var/log/nginx/access.log  main;
              sendfile        on;
              keepalive_timeout  65;

              upstream django_app {
                  {% for server in backend_servers %}
                  server {{ server }}:80;
                  {% endfor %}
              }

              server {
                  listen       80;
                  server_name  myapp.com www.myapp.com;

                  location /static/ {
                      proxy_pass http://{{ static_server }}:80;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                  }

                  location / {
                      proxy_pass http://django_app;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_redirect off;
                  }
              }
          }
        mode: '0644'
      register: nginx_config

    - name: Check if Nginx container exists
      docker_container_info:
        name: nginx-proxy
      register: container_info

    - name: Pull latest Nginx image
      docker_image:
        name: nginx:latest
        source: pull
        force_source: yes

    - name: Run Nginx container
      docker_container:
        name: nginx-proxy
        image: nginx:latest
        state: started
        restart_policy: always
        ports:
          - "80:80"
        volumes:
          - /home/{{ ansible_user }}/nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      register: container_status
      when: not container_info.exists or nginx_config.changed
      
    - name: Restart Nginx container if config changed
      docker_container:
        name: nginx-proxy
        state: started
        restart: yes
      when: nginx_config.changed and container_info.exists